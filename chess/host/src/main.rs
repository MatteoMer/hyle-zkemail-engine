// These constants represent the RISC-V ELF and the image ID generated by risc0-build.
// The ELF is used for proving and the ID is used for verification.
use hyle_contract::{HyleInput, HyleOutput};
use methods::{CHESS_GUEST_ELF, CHESS_GUEST_ID};
use risc0_zkvm::{default_prover, ExecutorEnv};

// TODO: abstract this better
fn main() {
    // Initialize tracing. In order to view logs, run `RUST_LOG=info cargo run`
    tracing_subscriber::fmt()
        .with_env_filter(tracing_subscriber::filter::EnvFilter::from_default_env())
        .init();

    /* RISC0 Proving */

    // TODO: get PGN from the mail
    // the input here is the PGN of the game
    let input: String = "1. e4 e6 2. Nf3 d5 3. exd5 exd5 4. d4 Bd6 5. Bd3 Ne7 6. Nc3 O-O 7. Bg5 c6 8. O-O Re8 9. Re1 Bg4 10. h3 Bh5 11. Qd2 Bxf3 12. gxf3 Qd7 13. Bxe7 Rxe7 14. Rxe7 Bxe7 15. Re1 Bh4 16. Qf4 Bf6 17. Qg4 Bxd4 18. Qxd4 Na6 19. Qh4 g6 20. f4 Nc5 21. Re7 Qd8 22. f5 d4 23. Ne4 gxf5 24. Nxc5 Kf8 25. Qxh7 Kxe7 26. Qh4+ Kd6 27. Qxd8+ Rxd8 28. Nxb7+ Ke7 29. Nxd8 Kxd8 30. Bxf5 c5 31. Kg2 Kc7 32. Kg3 Kd6 33. h4 Ke5 34. Kg4 a5 35. h5 Kf6 36. c3 a4 37. cxd4 cxd4 38. Bd3 Kg7 39. b3 axb3 40. axb3 Kh6 41. b4 f5+ 42. Kh4 f4 43. b5 Kg7 44. b6 Kh6 45. b7 Kg7 46. b8=Q Kh6 47. Qb6+ Kg7 48. Qg6+ Kf8 49. h6 f3 50. h7 Ke7 51. h8=Q Kd7 52. Qhh7+ Kd8 53. Qgg8#".into();
    let env = ExecutorEnv::builder()
        .write(&input)
        .unwrap()
        .build()
        .unwrap();

    // Obtain the default prover.
    let prover = default_prover();

    // Proof information by proving the specified ELF binary.
    // This struct contains the receipt along with statistics about execution of the guest
    let prove_info = prover.prove(env, CHESS_GUEST_ELF).unwrap();

    // extract the receipt.
    let receipt = prove_info.receipt;

    // TODO: think about what the journal should have

    let _output: u32 = receipt.journal.decode().unwrap();

    println!("output: {}", _output);

    // The receipt was verified at the end of proving, but the below code is an
    // example of how someone else could verify this receipt.
    receipt.verify(CHESS_GUEST_ID).unwrap();
}
